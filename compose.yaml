services:
  traefik:
    image: traefik:v3.0
    command:
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - "127.0.0.2:8089:80"
      - "127.0.0.2:8099:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks: [proxy]

  whoami:
    image: traefik/whoami
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.mig-who.rule=Host(`mig.local`) && PathPrefix(`/who`)
      - traefik.http.routers.mig-who.entrypoints=web
      - traefik.http.routers.mig-who.service=mig-who
      - traefik.http.services.mig-who.loadbalancer.server.port=80
      # raiz provis√≥ria
      - traefik.http.routers.mig-root.rule=Host(`mig.local`) && Path(`/`)
      - traefik.http.routers.mig-root.entrypoints=web
      - traefik.http.routers.mig-root.service=mig-who
      - traefik.http.routers.mig-root.priority=1
    restart: unless-stopped
    networks: [proxy]

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./api:/app
    environment:
      SERVER_NAME: ":80"
      DOCUMENT_ROOT: "/app/public"
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.mig-api.rule=Host(`mig.local`) && (PathPrefix(`/api/`) || Path(`/api`))
      - traefik.http.routers.mig-api.entrypoints=web
      - traefik.http.routers.mig-api.middlewares=mig-stripprefix
      - traefik.http.middlewares.mig-stripprefix.stripprefix.prefixes=/api
      - traefik.http.routers.mig-api.service=mig-api
      - traefik.http.services.mig-api.loadbalancer.server.port=80
    restart: unless-stopped
    networks: [proxy]

networks:
  proxy:
